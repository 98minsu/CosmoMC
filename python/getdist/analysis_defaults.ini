#Confidence limits for marginalized constraints. 
#Also used for 2D plots, but only number set by plot settings actually shown
contours = 0.68 0.95 0.99

#If the distribution is skewed, so two probability of tails differs by more than credible_interval_threshold
#of the peak value, use equal-probability limits rather than integrating inwards equally at both tails
#Note credible interval depends on smoothing
credible_interval_threshold = 0.05

#Determine bounds from projected ND confidence range for contours[ND_contour_range]
#If -1 use bounds determined entirely from 1D marginalized densities
#Use 0 or 1 if 2D plot contours are hitting edges
range_ND_contour = -1

#1D maringlized condidence limit to use to determine parameter ranges
range_confidence = 0.001

#Confidence limit to use for convergence tests (splits and Raftery Lewis)
converge_test_limit = 0.95

#Number of output bins for 1D plots
num_bins = 100

#if -1: use rule of thumb to set automatically for each parameter
#if >= 1: smooth by smooth_scale_1D bin widths
#if > 0  and <1: smooth by Gaussian of smooth_scale_1D standard deviations in each parameter (around 0.2-0.5 is often good)
#if < 0: automatic, with the overall smoothing length scaled by abs(smooth_scale_1D) from rule of thumb
smooth_scale_1D =-1 


#0 is basic normalization correction
#1 is linear boundary kernel (should get gradient correct)
#2 is a higher order kernel, that also affects estimates way from the boundary
boundary_correction_order=1

#Correct for (e.g. variance) biases by re-estimating using fhat  Win (x) (P/fhat)
#where fhat is the first (previous) estimate, and Win (x) P is simple kernel density estimate
#Can do mult_bias_correction_order iterations, but does not converge; 
#Using 1 usually good unless lots of samples and odd shape
#(if mult_bias_correction_order>0 then generally want larger smoothing scale than for basic density estimate)

mult_bias_correction_order = 1

#output bins for plotting
num_bins_2D=40

#if -1: use rule of thumb to set automatically for each parameter
#if >= 1: smooth by smooth_scale_1D bin widths
#if > 0  and <1: smooth by Gaussian of smooth_scale_1D standard deviations in each parameter (around 0.3-0.7 is often good)
#if < 0: automatic, with the overall smoothing length scaled by abs(smooth_scale_1D) from rule of thumb
smooth_scale_2D = -1

#maximum correlation ellipticity to allow for 2D kernels. Set to 0 to force non-elliptical.
max_corr_2D = 0.99

#number of points for 3d plots
max_scatter_points = 2000
